# Create Self-Signed Certificates using OpenSSL

# 1. Create the Private Key for the OpenAPI endpoint for the SCG Operator
openssl genrsa -out scg-openapi-private.key 2048

# 2. Create Certificate Signing Request Configuration
      # We will create a scg-openapi.conf file to have all the information to generate the CSR.

cat > scg-openapi.conf <<EOF
[ req ]
default_bits = 2048
prompt = no
default_md = sha256
req_extensions = req_ext
distinguished_name = dn

[ dn ]
C = US
ST = Illinois
L = Chicago
O = JCI
OU = JCI Dev
CN = scg-openapi.jci.onepivotal.net

[ req_ext ]
subjectAltName = @alt_names

[ alt_names ]
DNS.1 = scg-openapi.jci.onepivotal.net
DNS.2 = www.scg-openapi.jci.onepivotal.net

EOF


# 3. Generate Certificate Signing Request (CSR) using Private key of the OpenAPI endpoint

openssl req -new -key scg-openapi-private.key -out scg-openapi.csr -config scg-openapi.conf


# 4. Create a external file
# Execute the following to create scg-openapi-cert.conf for the SSL certificate.
# Ensure it includes domain name or IP address.

cat > scg-openapi-cert.conf <<EOF

authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = scg-openapi.jci.onepivotal.net

EOF


# 5. Generate SSL certificate With self signed CA
# Now, execute the following command to generate the SSL certificate
# that is signed by the rootCA.crt and rootCA.key
# created as part of our own Certificate Authority.

openssl x509 -req \
    -in scg-openapi.csr \
    -CA rootCA.crt -CAkey rootCA.key \
    -CAcreateserial -out scg-openapi.crt \
    -days 365 \
    -sha256 -extfile scg-openapi.conf
